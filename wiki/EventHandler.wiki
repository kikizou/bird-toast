#summary Skeleton for handling input events
#labels Phase-Implementation

*EventHash*: Hash relating strings to events or keysyms.
*EventHandlerHash*: Hash relating strings to programmable actions (EventHandlerCallbacks).

{{{
/*

 * EventHandlerCallback

 */

typedef void (*EventHandlerCallback)( SDL_Event *event, void *fakeThis );

/*
 * Contains EventHandlerCallback and list of events this handler responds to
 */
class EventHandler
{
        EventHandlerCallback callback;
        Uint32* eventList;
};

/*
 * Takes SDL_Events and handles them based on a virtual function
 */
class EventListener
{
public:
	bool isActive();
	void setActive(bool state);

	void addEventHandler(const char* action, EventHandler handler);
	virtual void handleEvent(SDL_Event* e);               // Passes event to handlers


private:
	bool isActive;
	EventHandlerHash handlers;
};

}}}

Actions list is exposeable by printing the 

Ex: GameScreen will be an EventListener.